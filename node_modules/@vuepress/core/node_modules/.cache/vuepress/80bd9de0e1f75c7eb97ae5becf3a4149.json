{"remainingRequest":"/Users/zkyc/Documents/vuepress-starter/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/zkyc/Documents/vuepress-starter/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/zkyc/Documents/vuepress-starter/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/zkyc/Documents/vuepress-starter/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/zkyc/Documents/vuepress-starter/docs/frame1/hello-spring.md?vue&type=template&id=7c174ed0&","dependencies":[{"path":"/Users/zkyc/Documents/vuepress-starter/docs/frame1/hello-spring.md","mtime":1600272007647},{"path":"/Users/zkyc/Documents/vuepress-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zkyc/Documents/vuepress-starter/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/zkyc/Documents/vuepress-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zkyc/Documents/vuepress-starter/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zkyc/Documents/vuepress-starter/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}